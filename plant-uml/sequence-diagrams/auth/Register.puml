@startuml Register (POST)

header Authentication API Sequence Diagram
footer Page %page% of %lastpage%
title "Register (POST)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:auth" as routerAuth
participant "<<controllers>>\n:auth" as controllersAuth
participant "<<model>>\n:User" as modelUser
database "<<MongoDB>>\n:users" as UsersDatabase

client->server ++:req.post('/auth/register')
server->routerAuth ++:app.use('/auth',auth)
routerAuth -> controllersAuth ++:register()
controllersAuth->modelUser ++:findOne({ email: req.body.email })
modelUser ->UsersDatabase ++: UserSchema
UsersDatabase --> modelUser --: user
modelUser --> controllersAuth --: user
alt !user
    controllersAuth->modelUser ++:create(req.body)
    modelUser ->UsersDatabase ++: UserSchema
    UsersDatabase --> modelUser --: newUser
    controllersAuth <-- modelUser --:newUser
    controllersAuth->client --:response (token)
else user
    controllersAuth -> client --:res.status(400).json({error: 'Email already exists'})
end

@enduml