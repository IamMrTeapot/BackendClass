@startuml PUT Single Appointment (PUT)

header Appointments API Sequence Diagram
footer Page %page% of %lastpage%
title "PUT Single Appointment (PUT)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:appointments" as routerAppointments
participant "<<middleware>>\n:auth" as middlewareAuth
participant "<<controllers>>\n:appointments" as controllersAppointments
participant "<<model>>\n:Appointment" as modelAppointment
database "<<MongoDB>>\n:appointments" as AppointmentsDatabase

client->server ++:req.put('/appointments/:id')
server->routerAppointments ++:app.use('/appointments',appointments)
routerAppointments -> middlewareAuth ++:protect()
alt token
    middlewareAuth -> routerAppointments --:next()
else !token || token == "null"
    middlewareAuth -> client --:res.status(401).json({error: 'Not authorized to access this route'})
end
routerAppointments -> middlewareAuth ++:authorize('admin','user')
alt req.user.role === 'admin' || req.user.role === 'user'
    middlewareAuth -> routerAppointments --:next()
else req.user.role !== 'admin' && req.user.role !== 'user'
    middlewareAuth -> client --:res.status(403).json({error: 'User role not authorized to access this route'})
end
routerAppointments -> controllersAppointments ++:updateAppointment()
controllersAppointments->modelAppointment ++:findByIdAndUpdate(req.params.id, req.body)
modelAppointment ->AppointmentsDatabase ++: AppointmentSchema
AppointmentsDatabase --> modelAppointment --: updatedAppointment
controllersAppointments <-- modelAppointment --:updatedAppointment
controllersAppointments->client --:response

@enduml